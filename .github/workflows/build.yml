name: Build QR APKs

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip openjdk-17-jdk \
            python3-pip python3-setuptools python3-wheel \
            build-essential libssl-dev libffi-dev \
            libsqlite3-dev libbz2-dev zlib1g-dev \
            autoconf automake libtool pkg-config
            
      - name: Ensure AIDL is installed
        run: |
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0"
          ls -l $HOME/android-sdk/build-tools/34.0.0/aidl || echo "AIDL not found!"
          echo "$HOME/android-sdk/build-tools/34.0.0" >> $GITHUB_PATH

      - name: Install Android SDK & Build-tools
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -o cmdline-tools.zip
          unzip -q cmdline-tools.zip
          mv cmdline-tools latest

          # Add SDK paths to GitHub Actions environment
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH

          # Accept licenses and install platforms/build-tools
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-34"

      - name: Install Buildozer
        run: |
          pip install --upgrade pip
          pip install buildozer cython

      - name: Build APKs in parallel
        run: |
          # Start generator build in background
          cd QR_Generator
          buildozer android debug &
          pid_generator=$!
          cd ../QR_Scanner
          buildozer android debug &
          pid_scanner=$!
          # Wait for both to finish
          wait $pid_generator
          wait $pid_scanner

      - name: Upload QR_Generator APK
        uses: actions/upload-artifact@v4
        with:
          name: QR_Generator-APK
          path: QR_Generator/bin/*.apk

      - name: Upload QR_Scanner APK
        uses: actions/upload-artifact@v4
        with:
          name: QR_Scanner-APK
          path: QR_Scanner/bin/*.apk
